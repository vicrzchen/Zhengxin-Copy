<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1352.8,2809.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Copy download files to merge folder" sap:VirtualizedContainerService.HintSize="1363.2,2644.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="ReadyforMerge" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="QueueItemForFolder" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Read config message" sap:VirtualizedContainerService.HintSize="1321.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="ConfigFilePath" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="ZXSBSJCJJQRPZLJ" DisplayName="Get Asset(Config file path)" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[ConfigFilePath]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="InitAllSettings.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[ConfigFilePath]</InArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="ZXSBSJ_Ready" DisplayName="Get Asset(ZXSBSJ_Ready)" sap:VirtualizedContainerService.HintSize="1321.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Boolean">[ReadyforMerge]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <If Condition="[ReadyforMerge]" DisplayName="If ready for further data, ZXSBSJ_Ready = false" sap:VirtualizedContainerService.HintSize="1321.6,2380.8" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;Last data not merge yet&quot;]" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="check Queue item number" sap:VirtualizedContainerService.HintSize="944,2231.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="ui:QueueItem" Name="FolderItem" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" sap2010:Annotation.AnnotationText="get the folders which included files to be merge&#xA;" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="902.4,82.4" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="QueueForProcessFolder" Result="[QueueItemForFolder]" Top="1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetQueueItems>
          <If Condition="[QueueItemForFolder.Count() &gt; 0]" DisplayName="If queue items qty &gt; 0" sap:VirtualizedContainerService.HintSize="902.4,2016" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Copy activity" sap:VirtualizedContainerService.HintSize="524.8,1866.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="SourcePath" />
                  <Variable x:TypeArguments="x:String" Name="DestinationPath" />
                  <Variable x:TypeArguments="s:Exception" Name="CopyException" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Private: Get Transaction Item" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="QueueForProcessFolder" TransactionItem="[FolderItem]" />
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[CopyException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="483.2,1164" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <TryCatch.Try>
                    <Sequence DisplayName="Copy to download folder" sap:VirtualizedContainerService.HintSize="375.2,932.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="s:String[]" Name="SourceFileList" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[SourcePath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[FolderItem.SpecificContent("FolderForCopyPath").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[DestinationPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Config("FileForMergePath").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Delete folder &quot;+ DestinationPath]" />
                      <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Delete batch files(*.csv)" Code="Array.ForEach(Directory.GetFiles(path,&quot;*.csv&quot;),Sub(x) File.Delete(x))" DisplayName="Invoke code to delete files" sap:VirtualizedContainerService.HintSize="333.6,84" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="path">[DestinationPath]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Copy files from &quot;+SourcePath+&quot; to &quot;+DestinationPath]" />
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[SourceFileList]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(SourcePath, "*.csv").ToArray]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Copy Files.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_FileList">[SourceFileList]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DestinationFolder">[DestinationPath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[FolderItem]">
                        <ui:SetTransactionStatus.Analytics>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:SetTransactionStatus.Analytics>
                        <ui:SetTransactionStatus.Output>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:SetTransactionStatus.Output>
                      </ui:SetTransactionStatus>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Mark transaction failed" sap:VirtualizedContainerService.HintSize="375.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Copy activity failed&quot;]" />
                          <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Reason="Copy download data failed." Status="Failed" TransactionItem="[FolderItem]">
                            <ui:SetTransactionStatus.Analytics>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                            </ui:SetTransactionStatus.Analytics>
                            <ui:SetTransactionStatus.Output>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                            </ui:SetTransactionStatus.Output>
                          </ui:SetTransactionStatus>
                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[CopyException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[new system.Exception("error")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <If Condition="[CopyException is Nothing]" DisplayName="If successful copied, make ZXSBSJ_Ready flag as true" sap:VirtualizedContainerService.HintSize="483.2,407.2" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="241.6,237.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SetAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Set ZXSBSJ_Ready as true and waiting for merge operation&#xA;" AssetName="ZXSBSJ_Ready" DisplayName="Set Asset ZXSBSJ_Ready as true" sap:VirtualizedContainerService.HintSize="200,82.4" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[True]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SetAsset>
                      <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="QueueForTiggerMerge">
                        <ui:AddQueueItem.ItemInformation>
                          <InArgument x:TypeArguments="x:String" x:Key="Ready">
                            <Literal x:TypeArguments="x:String">Go is ready</Literal>
                          </InArgument>
                        </ui:AddQueueItem.ItemInformation>
                      </ui:AddQueueItem>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;No data in Queue&quot;]" />
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>